package com.paypal.bfs.test.employeeserv.impl;

import com.paypal.bfs.test.employeeserv.api.EmployeeResource;
import com.paypal.bfs.test.employeeserv.api.model.Address;
import com.paypal.bfs.test.employeeserv.api.model.Employee;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RestController;

/**
 * Implementation class for employee resource.
 */
@RestController
public class EmployeeResourceImpl implements EmployeeResource {

	@Override
	public ResponseEntity<Employee> employeeGetById(String id) {

		Employee employee = new Employee();

		return new ResponseEntity<>(employee, HttpStatus.OK);
	}

	@Override
	public ResponseEntity<Employee> createEmployee(Employee employee) {
		// JDBC driver name and database URL
		String JDBC_DRIVER = "org.h2.Driver";
		String DB_URL = "jdbc:h2:~/test";

		// Database credentials
		String USER = "sa";
		String PASS = "";

		Connection conn = null;
		Statement stmt = null;
		try {
			// STEP 1: Register JDBC driver
			Class.forName(JDBC_DRIVER);

			// STEP 2: Open a connection
			System.out.println("Connecting to database...");
			conn = DriverManager.getConnection(DB_URL, USER, PASS);

			// STEP 3: Execute a query
			System.out.println("Adding to table in given database...");
			stmt = conn.createStatement();
			String sql = "INSERT INTO Employee (first_name, last_name, date_of_birth) VALUES ('";
			sql += employee.getFirstName() + "','" + employee.getLastName() + "','" + employee.getLastName() + "'";
			sql += ")";
			stmt.executeUpdate(sql);
			System.out.println("INSERTED EMPLOYEE...");
			
			sql = "INSERT INTO Address (line1, line2, city, state, country, zip_code, employeeId) VALUES ('";
			sql += employee.getAddress().getLine1() + "','" + employee.getAddress().getLine2() + "','" + employee.getAddress().getCity() + "','";
			sql += employee.getAddress().getState() + "','" + employee.getAddress().getCountry() + "','" + employee.getAddress().getZipCode() + "','";
			sql += employee.getId() + ")";
			stmt.executeUpdate(sql);
			System.out.println("INSERTED ADDRESS...");

			// STEP 4: Clean-up environment
			stmt.close();
			conn.close();
		} catch (SQLException se) {
			// Handle errors for JDBC
			se.printStackTrace();
		} catch (Exception e) {
			// Handle errors for Class.forName
			e.printStackTrace();
		} finally {
			// finally block used to close resources
			try {
				if (stmt != null)
					stmt.close();
			} catch (SQLException se2) {
			} // nothing we can do
			try {
				if (conn != null)
					conn.close();
			} catch (SQLException se) {
				se.printStackTrace();
			} // end finally try
		} // end try
		System.out.println("Goodbye!");
		return null;
	}
}
